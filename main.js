/*

    Author : Nishikant Parmar
    (nishikant.parmar@iitgn.ac.in)    

*/


class Node {
    constructor(folderName, parentNode){
        this.folderName = folderName;
        this.children = [];
        this.path = [];
        this.parentNode=parentNode;
        this.parentView=null;
    }
}


//Initialising current variables
var root = new Node("/",null);
root.path = ["/"];
var currNode = root;
var currentParentView = null;




function displayDirectory(root, parentView){

    /* 
        An example HTML generated by this function -
        <li>
            <span><i class="fa fa-folder"></i> FolderName </span>
            <ul>
                <li>SubFolder1</li>
                <li>SubFolder2</li>                                
            </ul>
        </li>        
    
    */

    var li = document.createElement("li");

    var span = document.createElement("span");

    span.innerHTML = "<i class='fa fa-folder folderViewIcon'></i> "+root.folderName+""; 

    span.classList.add("cursorPointer");

    li.append(span);

    var ul = document.createElement("ul");   

    if(root.children.length > 0){    
        
        //Recursively generating UI for sub-directories by passing 'root' & 'parentView'
        for(var i=0;i<root.children.length; i++){
            displayDirectory(root.children[i], ul);
        }                             
    }

    li.append(ul);

    root.parentView = ul;

    span.addEventListener("click", function() {  
        
        //adding click listener to update current variables when clicked
        currNode = root;                                
        currentParentView = ul;
        displayCurrentPath();     

    });

    //add newly generated folder to the parent folder in UI
    parentView.append(li);    
}

function loadView(){
    
    var folderView = $("#folderView");
    folderView.html("");

    //build the UI with a root and parentView    
    displayDirectory(root, folderView);

    //set the current parent view as the parent view of the root  
    currentParentView = root.parentView;
}

function displayCurrentPath(){
        
    var pathShower = $("#currentDirectoryPath");
    
    pathShower.html(''); 

    currNode.path.forEach(folderName => {  

        if(folderName=='/'){
            pathShower.append("/");
        } else {
            pathShower.append(folderName+"/");         
        }        
    });
    
}

function customAlert(text){
    var alertBox = $("#alertText"); 
    alertBox.html(text);
    alertBox.css("opacity","1");    
    setTimeout(function(){
        alertBox.css("opacity","0");        
    },1500);    
}

function createFolder(){

    var regexp = /^[0-9 a-zA-Z_-]+$/; //allow only alphanumeric characters, underscore, space and hyphen
    
    var newFolderName = $("#newFolderName").val().trim();
    
    if(newFolderName==""){
        
        customAlert("Please specify a folder name.");
        resetText();
        return false; 

    } else if(newFolderName.length > 20){ 
        
        customAlert("Folder name should be less than 21 characters.");
        resetText();    
        return false;

    } else if(!newFolderName.match(regexp)){

        customAlert("Invalid folder name.");
        resetText();    
        return false;

    } else {

        //check if a folder exists in the current directory with the same name
        for(var i=0;i<currNode.children.length;i++){
            if(currNode.children[i].folderName==newFolderName){
                customAlert("A folder with same name exists here. Please use another name.");
                resetText();
                return false;
            }            
        }        

        //make new node
        var newNode = new Node(newFolderName);

        //copy path of parent node
        var newPath  = currNode.path.map((x)=>x);

        //add this folder name to the path
        newPath.push(newFolderName);

        newNode.path = newPath;        
        newNode.parentNode = currNode;
        newNode.parentView = currentParentView;

        //push this new child to parent node
        currNode.children.push(newNode);                                

        //update the UI for 'only this node'
        displayDirectory(newNode, currentParentView);

        customAlert("Folder has been created!");
        resetText();        
    }
        
}

function goUpOneFolder(){
    
    if(currNode.parentNode){
                
        currNode = currNode.parentNode;         //update the current node and parent view
        currentParentView = currNode.parentView; 
                
        displayCurrentPath(); //update the UI

    } else {
        customAlert("You are at the root directory.");
    }
}

function resetText(){
      
    $("#newFolderName").val(''); 
    $("#newFolderName").focus(); 
}


$(document).ready(function(){    
    
    $("#createFolderBtn").on("click", function(){
        createFolder();
    });
    
    $("#upFolderBtn").on("click", function(){
        goUpOneFolder();
    });
        
    loadView();            
});
